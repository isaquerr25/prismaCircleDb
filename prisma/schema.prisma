generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  DEVELOPER
  TESTER
  GUEST
}

model User {

  id             Int           @id @default(autoincrement())
  email          String        @unique
  name           String?
  password       String
  wallet         String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  cash           BigInt?       @default(0)
  state          String?
  affiliated     User?         @relation("AffiliatedHistory", fields: [affiliatedId], references: [id])
  affiliatedId   Int?          @unique
  indicated      User[]        @relation("AffiliatedHistory")
  transactions   Transaction[] @relation("UserTransaction")
  cycles         Cycle[]       @relation("UserCycle ")
  role           Role          @default(GUEST)
  profilePicture String?

  Document Document[] @relation("UserDocument")
}

// enum TransactionActionTypes {
//   WITHDRAW
//   DEPOSIT
//   INVEST
//   COMPLETE
// }

// enum TransactionStateTypes {
//   CANCEL
//   PROCESS
//   COMPLETE
// }

model Transaction {

  id        Int      @id @default(autoincrement())
  action    String?  @default("DEPOSIT")
  value     BigInt
  valueBTC  String?
  hash      String?
  state     String?  @default("PROCESS")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wallet    String
  user      User     @relation("UserTransaction", fields: [userId], references: [id])
  userId    Int
}

model Cycle {

  id            Int      @id @default(autoincrement())
  action        String
  valueUSD      Int
  valueBTC      String?
  finalValueUSD Int?
  finalValueBTC String?
  state         String   @default("PROCESS")
  beginDate     DateTime
  finishDate    DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation("UserCycle ", fields: [userId], references: [id])
  userId        Int
  hash          String?
}

model MonthlyProfit {

  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  finishDate DateTime @default(now())
  updatedAt  DateTime @updatedAt
  profit     Int

}

enum DocumentRole {
  INVALID
  VALID
  PROCESS
}

model Document {
  id        Int           @id @default(autoincrement())
  state     DocumentRole? @default(PROCESS)
  fileName  String
  user      User          @relation("UserDocument", fields: [userId], references: [id])
  userId    Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}
